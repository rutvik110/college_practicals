# -*- coding: utf-8 -*-
"""Ass_2_.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TqdFwbpK9cpWw-lpo7zsm1p1EWkI8R8K
"""

import pandas as pd
df = pd.read_csv("IMDB_Dataset_new.csv")
df.head()

df.sentiment.replace("positive", 1, inplace=True)
df.sentiment.replace("negative", 0, inplace=True)
df.head()

df = df.drop_duplicates('review')

from sklearn.model_selection import train_test_split

from sklearn.feature_extraction.text import TfidfVectorizer
X = df['review']
Y = df['sentiment']
vect = TfidfVectorizer()
X = vect.fit_transform(df['review'])
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)

x_train = x_train[:2000]
y_train = y_train[:2000]
x_test = x_test[:500]
y_test = y_test[:500]

x_train = x_train.toarray()
x_test = x_test.toarray()

from keras.models import Sequential
from keras.layers import Dense
model = Sequential()
model.add(Dense(units=16, activation='relu', ))
model.add(Dense(units=8, activation='relu'))
model.add(Dense(units=1, activation='sigmoid'))
model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(x_train, y_train, batch_size=10, epochs=15)

acc = model.evaluate(x_test, y_test)
print('accuracy:', acc[1])

model.summary()